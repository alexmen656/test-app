{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/pe/Project/nextjs/beta-bay/app/notification/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { FC, useState } from 'react';\n\n// --- TYPE DEFINITIONS (for self-containment) ---\nexport interface Notification {\n    id: string;\n    title: string;\n    message: string;\n    timestamp: string;\n    read: boolean;\n}\n\n// --- HELPER COMPONENTS (for self-containment) ---\nconst Icon: FC<{ path: string; className?: string }> = ({ path, className = \"h-6 w-6\" }) => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d={path} />\n    </svg>\n);\n\nconst initialNotifications: Notification[] = [\n    {\n        id: \"1\",\n        title: \"New message from John\",\n        message: \"Hey, are you available for a call?\",\n        timestamp: \"2023-10-01T12:00:00Z\",\n        read: false\n    },\n    {\n        id: \"2\",\n        title: \"Your app has been approved\",\n        message: \"Congratulations! Your app is now live.\",\n        timestamp: \"2023-10-02T08:30:00Z\",\n        read: true\n    },\n    {\n        id: \"3\",\n        title: \"Reminder: Meeting at 3 PM\",\n        message: \"Don't forget about the meeting later today.\",\n        timestamp: \"2023-10-02T10:00:00Z\",\n        read: false\n    }\n];\n\n// --- NOTIFICATION ITEM COMPONENT ---\ninterface NotificationItemProps {\n    notification: Notification;\n}\n\nconst NotificationItem: FC<NotificationItemProps> = ({ notification }) => (\n    <div\n        className={`flex items-start p-4 border-b border-gray-200 cursor-pointer transition-colors duration-200 ${notification.read ? 'bg-white' : 'bg-blue-50'\n            }`}\n    >\n        {/* Status Dot */}\n        {!notification.read && (\n            <div className=\"w-2.5 h-2.5 bg-blue-500 rounded-full mt-1.5 mr-4 flex-shrink-0\"></div>\n        )}\n        {/* Icon */}\n        <div className={`mr-4 flex-shrink-0 ${notification.read ? 'ml-[26px]' : ''}`}>\n            <div className=\"w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center\">\n                <Icon path=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" className=\"h-5 w-5 text-gray-500\" />\n            </div>\n        </div>\n        {/* Content */}\n        <div className=\"flex-grow\">\n            <h4 className=\"font-semibold text-gray-800\">{notification.title}</h4>\n            <p className=\"text-sm text-gray-600 mt-1\">{notification.message}</p>\n            <p className=\"text-xs text-gray-400 mt-2\">{notification.timestamp}</p>\n        </div>\n    </div>\n);\n\n// --- NOTIFICATION PAGE COMPONENT ---\nconst NotificationPage: FC = () => {\n    const [notifications, setNotifications] = useState<Notification[]>(initialNotifications);\n\n    const unreadCount = notifications.filter(n => !n.read).length;\n\n    const handleNotificationClick = (id: string) => {\n        setNotifications(prev =>\n            prev.map(n => n.id === id ? { ...n, read: true } : n)\n        );\n    };\n\n    const handleMarkAllRead = () => {\n        setNotifications(prev =>\n            prev.map(n => n.read ? n : { ...n, read: true })\n        );\n    };\n\n    // onBack is not used in this example, but you can add it if needed\n\n    return (\n        <div className=\"max-w-4xl mx-auto\">\n            <header className=\"flex justify-between items-center mb-8\">\n                <div>\n                    <h1 className=\"text-4xl font-bold text-gray-800\">Notifications</h1>\n                    <p className=\"text-gray-500 mt-1\">You have {unreadCount} unread messages.</p>\n                </div>\n                <div className=\"flex items-center gap-4\">\n                    <button\n                        onClick={handleMarkAllRead}\n                        className=\"text-sm font-medium text-blue-600 hover:text-blue-800 disabled:text-gray-400 disabled:cursor-not-allowed\"\n                        disabled={unreadCount === 0}\n                    >\n                        Mark all as read\n                    </button>\n                </div>\n            </header>\n            <main className=\"bg-white border border-gray-200 rounded-2xl shadow-sm overflow-hidden\">\n                {notifications.length > 0 ? (\n                    notifications.map(notification => (\n                        <NotificationItem\n                            key={notification.id}\n                            notification={notification}\n                        />\n                    ))\n                ) : (\n                    <div className=\"text-center p-12 text-gray-500\">\n                        <Icon path=\"M18 8A6 6 0 006 8c0 7-3 9-3 9h18s-3-2-3-9\" className=\"mx-auto h-12 w-12 text-gray-300\" />\n                        <h3 className=\"mt-4 text-lg font-medium\">No notifications yet</h3>\n                        <p className=\"mt-1 text-sm\">We'll let you know when something new comes up.</p>\n                    </div>\n                )}\n            </main>\n        </div>\n    );\n};\n\nexport default NotificationPage;\n"],"names":[],"mappings":";;;;AACA;;;AADA;;AAYA,mDAAmD;AACnD,MAAM,OAAiD,CAAC,EAAE,IAAI,EAAE,YAAY,SAAS,EAAE,iBACnF,6LAAC;QAAI,OAAM;QAA6B,WAAW;QAAW,MAAK;QAAO,SAAQ;QAAY,QAAO;QAAe,aAAa;kBAC7H,cAAA,6LAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,GAAG;;;;;;;;;;;KAFxD;AAMN,MAAM,uBAAuC;IACzC;QACI,IAAI;QACJ,OAAO;QACP,SAAS;QACT,WAAW;QACX,MAAM;IACV;IACA;QACI,IAAI;QACJ,OAAO;QACP,SAAS;QACT,WAAW;QACX,MAAM;IACV;IACA;QACI,IAAI;QACJ,OAAO;QACP,SAAS;QACT,WAAW;QACX,MAAM;IACV;CACH;AAOD,MAAM,mBAA8C,CAAC,EAAE,YAAY,EAAE,iBACjE,6LAAC;QACG,WAAW,CAAC,4FAA4F,EAAE,aAAa,IAAI,GAAG,aAAa,cACrI;;YAGL,CAAC,aAAa,IAAI,kBACf,6LAAC;gBAAI,WAAU;;;;;;0BAGnB,6LAAC;gBAAI,WAAW,CAAC,mBAAmB,EAAE,aAAa,IAAI,GAAG,cAAc,IAAI;0BACxE,cAAA,6LAAC;oBAAI,WAAU;8BACX,cAAA,6LAAC;wBAAK,MAAK;wBAAgM,WAAU;;;;;;;;;;;;;;;;0BAI7N,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAG,WAAU;kCAA+B,aAAa,KAAK;;;;;;kCAC/D,6LAAC;wBAAE,WAAU;kCAA8B,aAAa,OAAO;;;;;;kCAC/D,6LAAC;wBAAE,WAAU;kCAA8B,aAAa,SAAS;;;;;;;;;;;;;;;;;;MAnBvE;AAwBN,sCAAsC;AACtC,MAAM,mBAAuB;;IACzB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IAEnE,MAAM,cAAc,cAAc,MAAM,CAAC,CAAA,IAAK,CAAC,EAAE,IAAI,EAAE,MAAM;IAE7D,MAAM,0BAA0B,CAAC;QAC7B,iBAAiB,CAAA,OACb,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,KAAK;oBAAE,GAAG,CAAC;oBAAE,MAAM;gBAAK,IAAI;IAE3D;IAEA,MAAM,oBAAoB;QACtB,iBAAiB,CAAA,OACb,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI,GAAG,IAAI;oBAAE,GAAG,CAAC;oBAAE,MAAM;gBAAK;IAEtD;IAEA,mEAAmE;IAEnE,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBAAO,WAAU;;kCACd,6LAAC;;0CACG,6LAAC;gCAAG,WAAU;0CAAmC;;;;;;0CACjD,6LAAC;gCAAE,WAAU;;oCAAqB;oCAAU;oCAAY;;;;;;;;;;;;;kCAE5D,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC;4BACG,SAAS;4BACT,WAAU;4BACV,UAAU,gBAAgB;sCAC7B;;;;;;;;;;;;;;;;;0BAKT,6LAAC;gBAAK,WAAU;0BACX,cAAc,MAAM,GAAG,IACpB,cAAc,GAAG,CAAC,CAAA,6BACd,6LAAC;wBAEG,cAAc;uBADT,aAAa,EAAE;;;;8CAK5B,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAK,MAAK;4BAA4C,WAAU;;;;;;sCACjE,6LAAC;4BAAG,WAAU;sCAA2B;;;;;;sCACzC,6LAAC;4BAAE,WAAU;sCAAe;;;;;;;;;;;;;;;;;;;;;;;AAMpD;GAtDM;MAAA;uCAwDS","debugId":null}}]
}